{
  "id": "ecos-app-form",
  "formKey": "",
  "title": {
    "en": "ECOS Applications Form",
    "ru": "Форма приложения ECOS"
  },
  "description": {},
  "customModule": "",
  "typeRef": "emodel/type@ecos-app",
  "width": "",
  "system": true,
  "i18n": {},
  "definition": {
    "components": [
      {
        "title": "Main",
        "key": "panel2",
        "type": "panel",
        "input": false,
        "components": [
          {
            "columns": [
              {
                "components": [
                  {
                    "label": "Id",
                    "defaultValue": "",
                    "key": "moduleId",
                    "type": "textfield",
                    "input": true,
                    "validate": {
                      "required": true
                    }
                  },
                  {
                    "label": "Name",
                    "key": "name",
                    "type": "mlText",
                    "input": true,
                    "validate": {
                      "required": true
                    }
                  }
                ],
                "type": "column",
                "input": false,
                "key": "column",
                "index": 0
              },
              {
                "type": "column",
                "input": false,
                "key": "column",
                "index": 1,
                "components": [
                  {
                    "label": "Version",
                    "defaultValue": "",
                    "key": "version",
                    "type": "textfield",
                    "input": true,
                    "validate": {
                      "required": true
                    }
                  }
                ]
              }
            ],
            "key": "columns",
            "type": "columns",
            "input": false
          },
          {
            "label": {
              "ru": "Columns"
            },
            "key": "columns4",
            "columns": [
              {
                "components": [
                  {
                    "label": {
                      "ru": "Репозиторий",
                      "en": "Repository"
                    },
                    "key": "repositoryEndpoint",
                    "modalTitle": "",
                    "journalId": "endpoints",
                    "refreshOn": [],
                    "optionalWhenDisabled": false,
                    "type": "selectJournal",
                    "input": true,
                    "queryData": "",
                    "source": {
                      "custom": {
                        "columns": []
                      },
                      "type": "journal",
                      "customValues": []
                    }
                  }
                ],
                "type": "column",
                "input": false,
                "key": "column",
                "index": 0
              },
              {
                "index": 1,
                "type": "column",
                "input": false,
                "key": "column",
                "components": [
                  {
                    "label": "loadConnectionStatus",
                    "source": {
                      "type": "recordsQuery",
                      "recordsQuery": {
                        "query": "const application = Records.get(recordId).getBaseRecord().id\n\nif (!application) {\n  return;\n}\n\nvalue = {\n    sourceId: 'eapps/git',\n    query: {\n        \"application\": application,\n        \"repository\": data.repositoryEndpoint\n    },\n    language: 'repo-connection-status'\n};",
                        "attributes": {
                          "msg": "connectionResultMsgHtml"
                        },
                        "isSingle": true
                      }
                    },
                    "update": {
                      "type": "event",
                      "event": "fire-check-connection",
                      "force": true
                    },
                    "refreshOn": [
                      {
                        "label": "checkRepoConnection",
                        "value": "checkRepoConnection"
                      }
                    ],
                    "key": "loadConnectionStatus",
                    "type": "asyncData",
                    "input": true
                  },
                  {
                    "label": {
                      "ru": "HTML"
                    },
                    "key": "connect-verify-status",
                    "className": "",
                    "content": {
                      "ru": "Статус проверки: не запущена"
                    },
                    "refreshOnChange": false,
                    "refreshOn": [
                      "checkRepoConnection"
                    ],
                    "calculateValue": "var msgError = _.get(data, 'loadConnectionStatus.msg');\nvar htmlContent = \"<p><h6>Статус подключения к репозиторию</h6><p style='color: orange'>Соединение не проверено</p></p>\";\n\nif (!!msgError) {\n    htmlContent = msgError;\n}\n\ndocument.getElementById(component.id).innerHTML = htmlContent;",
                    "optionalWhenDisabled": false,
                    "type": "htmlelement",
                    "input": false
                  },
                  {
                    "label": {
                      "ru": "Проверить соединение",
                      "en": "Check connection"
                    },
                    "key": "checkRepoConnection",
                    "action": "event",
                    "state": "",
                    "showValidations": false,
                    "event": "fire-check-connection",
                    "theme": "info",
                    "size": "sm",
                    "refreshOn": [],
                    "optionalWhenDisabled": false,
                    "customConditional": "show = !!data.repositoryEndpoint",
                    "type": "button",
                    "input": true,
                    "headers": [
                      {}
                    ]
                  }
                ]
              }
            ],
            "oneColumnInViewMode": false,
            "type": "columns",
            "input": false
          }
        ]
      },
      {
        "title": "Artifacts",
        "key": "panel3",
        "type": "panel",
        "input": false,
        "components": [
          {
            "columns": [
              {
                "components": [
                  {
                    "label": "Types",
                    "journalId": "ecos-app-types",
                    "key": "typeRefs",
                    "type": "selectJournal",
                    "input": true,
                    "multiple": true,
                    "source": {
                      "custom": {
                        "columns": []
                      },
                      "type": "journal",
                      "customValues": []
                    }
                  },
                  {
                    "label": {
                      "ru": "Загрузить артефакты для выбранных типов",
                      "en": "Load artifacts for selected types"
                    },
                    "action": "custom",
                    "state": "",
                    "showValidations": false,
                    "custom": "var types = data.typeRefs || [];\nvar form = form;\n\nif (window.types_artifacts_loading) {\n  return;\n}\n\nif (types.length) {\n\n  window.types_artifacts_loading = true;\n  \n\tCiteck.Records.query({\n\t    \n\t    sourceId: 'eapps/artifact',\n\t    query: {\n\t        typeRefs: types\n\t    },\n\t    language: \"type-artifacts\"\n\n\t}).then(function(res) {\n\n\t\tvar newArtifacts = res.records;\n\t\tif (!newArtifacts || !newArtifacts.length) {\n\t\t  Citeck.NotificationManager.warning(\"Подходящих артефактов не найдено\");\n\t\t  return null;\n\t\t}\n\t\t\n\t  var resultArtifacts = [];\n\t  for (var idx in data.artifacts) {\n\t    resultArtifacts.push(data.artifacts[idx]);\n\t  }\n\t  var artifactsSizeBefore = resultArtifacts.length; \n\t  for (var idx in newArtifacts) {\n\t    var artifact = newArtifacts[idx];\n\t    if (resultArtifacts.indexOf(artifact) === -1) {\n\t      resultArtifacts.push(artifact);\n\t    }\n\t  }\n\t  var newArtifactsCount = resultArtifacts.length - artifactsSizeBefore; \n\t  if (newArtifactsCount) {\n  \t  var newSubmission = Object.assign({}, form.submission, {\n  \t\t\tdata: Object.assign({}, form.submission.data, {\n  \t\t\t\t\"artifacts\": resultArtifacts\n  \t\t\t})\n  \t\t});\n  \t\tform.submission = newSubmission;\n  \t\tCiteck.NotificationManager.success(\"Артефакты успешно добавлены. Количество: \" + newArtifactsCount);\n\t  } else {\n\t    Citeck.NotificationManager.success(\"Все найденные артефакты уже добавлены\");\n\t  }\n\t}).then(function() {  \n    window.types_artifacts_loading = false;\n\t}).catch(function(e) {\n    window.types_artifacts_loading = false;\n    Citeck.NotificationManager.error(\"Произошла ошибка при загрузке артефактов\");\n\t  throw e;\n\t});\n} else {\n    Citeck.NotificationManager.warning(\"Вы должны выбрать один или несколько типов для использования автоматической загрузки артефактов\");\n}",
                    "block": true,
                    "key": "submit3",
                    "type": "button",
                    "input": true
                  }
                ],
                "type": "column",
                "input": false,
                "key": "column",
                "index": 0
              },
              {
                "index": 1,
                "type": "column",
                "input": false,
                "key": "column",
                "components": [
                  {
                    "label": "Artifacts",
                    "multiple": true,
                    "reorder": false,
                    "journalId": "ecos-app-artifacts",
                    "defaultValue": [],
                    "key": "artifacts",
                    "type": "selectJournal",
                    "input": true,
                    "source": {
                      "custom": {
                        "columns": []
                      },
                      "type": "journal",
                      "customValues": []
                    }
                  }
                ]
              }
            ],
            "key": "columns2",
            "type": "columns",
            "input": false
          }
        ]
      },
      {
        "columns": [
          {
            "components": [],
            "md": 3,
            "type": "column",
            "input": false,
            "key": "column",
            "index": 0
          },
          {
            "md": 3,
            "type": "column",
            "input": false,
            "key": "column",
            "index": 1,
            "components": []
          },
          {
            "md": 3,
            "type": "column",
            "input": false,
            "key": "column",
            "index": 2,
            "components": [
              {
                "label": "Cancel",
                "action": "event",
                "state": "",
                "showValidations": false,
                "event": "cancel",
                "block": true,
                "key": "submit2",
                "type": "button",
                "input": true
              }
            ]
          },
          {
            "md": 3,
            "type": "column",
            "input": false,
            "key": "column",
            "index": 3,
            "components": [
              {
                "label": "Save",
                "state": "",
                "theme": "primary",
                "block": true,
                "disableOnInvalid": true,
                "key": "submit",
                "type": "button",
                "input": true
              }
            ]
          }
        ],
        "key": "columns3",
        "type": "columns",
        "input": false
      }
    ],
    "formId": "ecos-app-form"
  },
  "attributes": {},
  "notExists": false
}
